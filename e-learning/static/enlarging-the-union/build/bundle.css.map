{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "Slider.svelte",
    "Thumb.svelte",
    "App.svelte",
    "Main.svelte",
    "Slideshow.svelte"
  ],
  "sourcesContent": [
    "<input type=\"number\" value={value[0]} name={name[0]} />\r\n{#if range}\r\n  <input type=\"number\" value={value[1]} name={name[1]} />\r\n{/if}\r\n<div class=\"track\">\r\n  <div\r\n    class=\"progress\"\r\n    style={progress} />\r\n  <Thumb bind:pos={pos[0]} on:active={({ detail: v }) => active = v}>\r\n    <slot name=\"left\">\r\n      <slot>\r\n        <div class=\"thumb\" />\r\n      </slot>\r\n    </slot>\r\n  </Thumb>\r\n  {#if range}\r\n    <Thumb bind:pos={pos[1]} on:active={({ detail: v }) => active = v}>\r\n      <slot name=\"right\">\r\n        <slot>\r\n          <div class=\"thumb\" />\r\n        </slot>\r\n      </slot>\r\n    </Thumb>\r\n  {/if}\r\n</div>\r\n\r\n<script>\r\n  import { createEventDispatcher } from \"svelte\";\r\n  import Thumb from \"./Thumb.svelte\";\r\n\r\n  const dispatch = createEventDispatcher();\r\n\r\n  let name = [];\r\n  let range = false;\r\n  let min = 0;\r\n  let max = 100;\r\n  let step = 1;\r\n  let value = [min, max];\r\n  let pos;\r\n  let active = false;\r\n  let order = false;\r\n\r\n  export { name, range, min, max, step, value, order };\r\n\r\n  $: if (active) setValue(pos);\r\n  $: if (!active) setPos(value);\r\n  $: if (range && order && active) pos = checkPos(pos);\r\n  $: min, max, clamp();\r\n  $: progress = `\r\n    left: ${range ? Math.min(pos[0], pos[1]) * 100 : 0}%;\r\n    right: ${100 - Math.max(pos[0], (range ? pos[1] : pos[0])) * 100}%;\r\n  `;\r\n\r\n  function setValue(pos) {\r\n    const offset = min % step;\r\n    const width = max - min\r\n    value = pos\r\n      .map(v => min + v * width)\r\n      .map(v => Math.round((v - offset) / step) * step + offset);\r\n    dispatch(\"input\", value);\r\n  }\r\n\r\n  function setPos(value) {\r\n    pos = value\r\n      .map(v => Math.min(Math.max(v, min), max))\r\n      .map(v => (v - min) / (max - min));\r\n  }\r\n\r\n  function checkPos(pos) {\r\n    return [Math.min(...pos), Math.max(...pos)];\r\n  }\r\n\r\n  function clamp() {\r\n    setPos(value);\r\n    setValue(pos);\r\n  }\r\n</script>\r\n\r\n<style>\r\n  input {\r\n    display: none;\r\n  }\r\n\r\n  .track {\r\n    margin: 16px 8px;\r\n    position: relative;\r\n    height: 4px;\r\n    width: calc(100% - 16px);\r\n    border-radius: 100vh;\r\n    background: var(--track-bg, #ebebeb);\r\n  }\r\n\r\n  .progress {\r\n    position: absolute;\r\n    left: 0;\r\n    right: 0;\r\n    top: 0;\r\n    bottom: 0;\r\n    border-radius: 100vh;\r\n    background: var(--progress-bg, #8abdff);\r\n  }\r\n\r\n  .thumb {\r\n    width: 16px;\r\n    height: 16px;\r\n    border-radius: 100vh;\r\n    background: var(--thumb-bg, #5784fd);\r\n  }</style>\r\n",
    "<div\r\n  class=\"thumb\"\r\n  style={`left: ${pos * 100}%;`}\r\n  use:handle\r\n  on:dragstart={() => ((active = true), dispatch('active', true))}\r\n  on:drag={({ detail: v }) => (pos = v)}\r\n  on:dragend={() => ((active = false), dispatch('active', false))}>\r\n  <div class=\"thumb-content\" class:active>\r\n    <slot />\r\n  </div>\r\n</div>\r\n\r\n<script>\r\n  import { createEventDispatcher } from \"svelte\";\r\n  import handle from \"./slider.js\";\r\n  const dispatch = createEventDispatcher();\r\n  let pos, active;\r\n  export { pos };\r\n</script>\r\n\r\n<style>\r\n  .thumb {\r\n    position: absolute;\r\n    top: 50%;\r\n    width: 0;\r\n    height: 0;\r\n  }\r\n\r\n  .thumb-content {\r\n    position: relative;\r\n    width: -webkit-fit-content;\r\n    width: -moz-fit-content;\r\n    width: fit-content;\r\n    height: -webkit-fit-content;\r\n    height: -moz-fit-content;\r\n    height: fit-content;\r\n    transform: translate(-50%, -50%);\r\n  }\r\n\r\n  .thumb-content::before {\r\n    content: \"\";\r\n    position: absolute;\r\n    width: 200%;\r\n    height: 200%;\r\n    transform: translate(-25%, -25%) scale(0);\r\n    border-radius: 100vh;\r\n    background: var(--thumb-bg, #5784fd);\r\n    opacity: 30%;\r\n    transition: transform 100ms ease-in-out;\r\n  }\r\n\r\n  .thumb-content.active::before {\r\n    transform: translate(-25%, -25%) scale(1);\r\n  }</style>\r\n",
    "<script>\n  import { onMount } from 'svelte';\n\n  import Main from '../../shared/Main.svelte';\n\n  import Slideshow from '../../shared/components/Slideshow.svelte';\n\n  export let jsonFile;\n  let data = {};\n\n\n  $: data_items = data.items || [];\n  // While waiting for data to load, #each will complain, \n  // that it only iterates over array-like objects.\n  // Option 1: wrap {#each} in {#if data_items}\n  // Option 2: provide empty array as default\n\n  $: data_config = data.config || {};\n\n  \n  onMount( async () => {\n    const response = await fetch( jsonFile );\n    const json = await response.json();\n\n    // add some more properties\n    json.items.forEach( (item, i) => {\n      item.active = false\n    });\n\n    data = json    \n  });\n\n</script>\n\n\n<Main colorFill=\"var(--color-blue-light-5)\" colorBorder=\"transparent\" fullHeight={false} overflow=\"hidden\">\n  <Slideshow items={data_items} config={data_config}/>\n</Main>\n\n\n<style>\n  /* DIRTY */\n  :global(main){border:none !important;}</style>\n\n  \n",
    "<script>\r\n  import debounce from 'lodash/debounce'\r\n  import {getParentFrame, setParentFrameHeight} from './scripts/iframe-resizer.js'\r\n\r\n  export let fullHeight = true\r\n  export let colorFill = 'var(--color-white)'\r\n  export let colorBorder = 'var(--color-blue-light-5)'\r\n  export let overflow = 'auto'\r\n  export let noPadding = false\r\n  export let borderWidth = '5px'\r\n\r\n  let iframe = getParentFrame()\r\n\r\n  let windowWidth\r\n  let windowHeight\r\n  // watch changes in window size // this takes care of browser resizing\r\n  $: on_window_resize_w = windowWidth\r\n  // handle changes\r\n  $: on_window_resize_w, handleResize()\r\n\r\n  let appHeight\r\n  // watch changes in app size // this handles changes in app dimensions (i.e. after loading content)\r\n  $: on_app_resize_h = appHeight\r\n  // handle changes\r\n  $: on_app_resize_h, handleResize()\r\n\r\n\r\n  const handleResize = debounce(e => {\r\n    iframeMediaQuery()\r\n    setTimeout(()=>{\r\n      console.log('resize', windowWidth, windowHeight, appHeight, windowHeight == appHeight ? 'âœ… SAME' : 'ðŸ’¢ DIFF')\r\n      setParentFrameHeight( iframe, appHeight )\r\n    }, 300);\r\n  }, 100)\r\n\r\n\r\n  let bodyMinWidthInEms;\r\n\r\n  /* Taken from public/external/zozo-tabs/iframe-media-query.js */\r\n  function iframeMediaQuery(){\r\n    var target = parent.document.body\r\n\r\n    var widthPx = target.clientWidth\r\n    var widthEm = widthPx / parseFloat( getComputedStyle(target)['font-size'] )\r\n\r\n\r\n    if( widthEm >= 80.5 ){ bodyMinWidthInEms = '83em' } else\r\n    if( widthEm >= 57.9 ){ bodyMinWidthInEms = '60em' } else\r\n    if( widthEm >= 42.0 ){ bodyMinWidthInEms = '44em' } else\r\n    if( widthEm >= 33.0 ){ bodyMinWidthInEms = '33em' } else\r\n    bodyMinWidthInEms = ''\r\n  }\r\n\r\n</script>\r\n\r\n<svelte:window bind:innerWidth={windowWidth} bind:innerHeight={windowHeight}/>\r\n<!-- NOPE: <svelte:body data-min-width={bodyMinWidthInEms}/> -->\r\n\r\n<main \r\n  bind:offsetHeight={appHeight}\r\n  data-min-width={bodyMinWidthInEms}\r\n  class:fullHeight\r\n  class:noPadding\r\n  style=\"\r\n    --color-fill: { colorFill };\r\n    --color-border: { colorBorder };\r\n    --overflow: { overflow };\r\n    --border-width: { borderWidth };\r\n  \"\r\n  >\r\n  <slot/>\r\n</main>\r\n\r\n<style>\r\n  :global(body),\r\n  :global(html){\r\n    margin: 0;\r\n    padding: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    position: relative;\r\n    box-sizing: border-box;\r\n    overflow: hidden; /* without, some viewport widths might trigger a vertical scrollbar, resulting in infinite calls to handleResize */\r\n  }\r\n\r\n  main {\r\n    position: relative;\r\n\r\n    padding: 10px;\r\n    background-color: var(--color-fill);\r\n    border: solid var(--color-border);\r\n    border-width: var(--border-width);\r\n\r\n    box-sizing: border-box; /* needed for 100% .fullheight to prevent vertical scroll bar */\r\n\r\n    overflow: var(--overflow);\r\n  }\r\n\r\n  main.fullHeight {\r\n    min-height: 100%;\r\n  }\r\n\r\n  main.noPadding {\r\n    padding: 0;\r\n  }</style>\r\n",
    "<script>\r\n  import { onMount } from 'svelte';\r\n\r\n  import { fly } from \"svelte/transition\";\r\n\r\n  import { circOut as ease } from \"svelte/easing\";\r\n\r\n  import Slider from '@bulatdashiev/svelte-slider';\r\n\r\n  export let config = {};\r\n  export let items = [];\r\n\r\n  let lastActiveIndex;\r\n  let activeIndex = 0;\r\n\r\n  let sliderValues = [3,3]; // slidervalues is an array of [min,max]. If Slider is not of type RANGE, both values are identical.\r\n  $: on_slidervalues_change = sliderValues\r\n  $: on_slidervalues_change, updateActiveIndex()\r\n  function updateActiveIndex(){\r\n    activeIndex = sliderValues[0];\r\n  }\r\n\r\n  let sliderW;\r\n\r\n  $: sliderSteps = items.length-1;\r\n  $: thumb = config.thumb || '';\r\n\r\n  let demoIndex;\r\n\r\n  onMount(async () => {\r\n    // force update. without, slider images are stuck on NaN upon load\r\n\t\t// sliderValues = sliderValues;\r\n\t\tsliderValues = [3,3];\r\n\t});\r\n\r\n  // When creating vars using $:, you can only use them in other variables assigned using $:.\r\n  // https://stackoverflow.com/a/56318461/2619245\r\n  //\r\n  // watch changes in activeIndex\r\n  $: on_active_change = activeIndex\r\n  // handle changes\r\n  $: on_active_change, updateSlideVisibility()\r\n\r\n  function updateSlideVisibility(){\r\n    items.forEach( (item, i) => {\r\n      items[i].active = i === activeIndex\r\n    });\r\n\r\n    // trigger update after changes _inside_ array\r\n    // https://svelte.dev/tutorial/updating-arrays-and-objects\r\n    items = items;\r\n  }\r\n\r\n\r\n  function active( index ){\r\n    lastActiveIndex = activeIndex\r\n\r\n    let newActive\r\n    // unflipping card, result: no flipped cards\r\n    if( index == activeIndex ) newActive = -1\r\n    // switching between cards\r\n    else newActive = index\r\n\r\n    activeIndex = newActive\r\n  }\r\n\r\n\r\n  let demoTimeout;\r\n  let demoInterval;\r\n\r\n  initDemoMode()\r\n\r\n  function initDemoMode(){\r\n    demoTimeout = setTimeout(startDemoMode, 9000)\r\n  }\r\n\r\n  function startDemoMode(){\r\n    demoInterval = setInterval(setDemoIndex, 5000)\r\n  }\r\n\r\n  function setDemoIndex(){\r\n    if (activeIndex >= 0) return;\r\n\r\n    let newDemoIndex = Math.round( Math.random() * (items.length-1) );\r\n    if (demoIndex == newDemoIndex) {\r\n      setDemoIndex()\r\n    } else {\r\n      demoIndex = newDemoIndex\r\n    }\r\n  }\r\n\r\n  function stopDemoMode( eventName ){\r\n    // console.log( 'stopDemoMode', eventName )\r\n    clearTimeout(demoTimeout)\r\n    clearInterval(demoInterval)\r\n    demoIndex = -1\r\n    initDemoMode();\r\n  }\r\n\r\n  function getSliderStepFromClickX(event){\r\n    let clickX = event.clientX;\r\n    let clickXPercent = clickX/sliderW;\r\n    let sliderStep = Math.round((items.length-1) * clickXPercent);\r\n    // console.log('handleSliderClick', event, ' cX:', clickX, ' slW:', sliderW, ' cXP:', clickXPercent, ' step:', step);\r\n    sliderValues = [sliderStep,sliderStep];\r\n  }\r\n\r\n</script>\r\n\r\n\r\n<ol\r\n  class=\"content\"\r\n  class:active={ activeIndex > -1 }\r\n  on:mousemove={ ()=>{stopDemoMode('mousemove')} }\r\n  on:click={ ()=>{stopDemoMode('click')} }\r\n  >\r\n  <!-- {#each data as item, i} -->\r\n  {#each items as { headline, copy, image }, i}\r\n    <li \r\n      in:fly=\"{{ y:70, duration:500, delay:i*50, easing:ease }}\"\r\n      class:active = { i === activeIndex }\r\n      class:lastActive = { i === lastActiveIndex }\r\n    >\r\n      <!-- {#if headline}<p>{ @html headline }</p>{/if}\r\n      {#if copy}<h2>{ @html copy }</h2>{/if} -->\r\n      {#if image}<img alt=\"\" src=\"{image}\">{/if}\r\n    </li>\r\n  {/each}\r\n</ol>\r\n<ol class=\"labels\">\r\n  {#each items as { headline }, i}\r\n    <li \r\n      class:active = { i === activeIndex }\r\n      on:click={ ()=>{ sliderValues=[i,i] } }\r\n    >\r\n      {#if headline}<h3>{ @html headline }</h3>{/if}\r\n    </li>\r\n  {/each}\r\n</ol>\r\n\r\n\r\n<div class=\"slider-container\"\r\n  on:click={ (event)=>{getSliderStepFromClickX(event)} }\r\n  bind:clientWidth={sliderW}\r\n>\r\n  <Slider \r\n    bind:value={sliderValues}\r\n    min=\"0\"\r\n    max=\"{sliderSteps}\"\r\n    step=\"1\"\r\n  >\r\n    <span\r\n      class=\"slider-thumb\"\r\n      class:default = { thumb === '' }\r\n      class:custom = { thumb !== '' }\r\n    >\r\n      {thumb}\r\n    </span>\r\n  </Slider>\r\n</div>\r\n\r\n<!-- https://lizenzhinweisgenerator.de -->\r\n<cite>\r\n  {#if items[activeIndex]}\r\n    {@html items[activeIndex].credit}\r\n  {/if}\r\n</cite>\r\n\r\n\r\n<style>\r\n  li:before,\r\n  li:after {\r\n    content: '';\r\n    display: none;\r\n  }\r\n\r\n  ol {\r\n    list-style-type: none;\r\n    padding: 0;\r\n    margin: 0.5rem;\r\n    position: relative; /* needed for fullsize card backs*/\r\n  }\r\n/* \r\n  @media (min-width: 33em){\r\n    ol {\r\n      position: relative;\r\n    }\r\n  } */\r\n\r\n  ol.content {\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    grid-template-rows: 1fr;\r\n  }\r\n\r\n  ol.content li {\r\n    grid: 1;\r\n    grid-column-start: 1;\r\n    grid-row-start: 1;\r\n    visibility:hidden;\r\n  }\r\n\r\n  ol.content li.active {\r\n    visibility: visible;\r\n  }\r\n\r\n  ol.content img {\r\n    width: 100%;\r\n  }\r\n\r\n\r\n  ol.labels {\r\n    display: grid;\r\n    -moz-column-gap: 3%;\r\n         column-gap: 3%;\r\n    grid-auto-flow: column;\r\n    grid-auto-columns: 1fr;\r\n  }\r\n\r\n  ol.labels li {\r\n    opacity: 0.3;\r\n    /* background: var(--color-blue-light-4); */\r\n    cursor: pointer;\r\n  }\r\n\r\n  ol.labels li h3 {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n  :global(ol.labels li h3 small) {\r\n    font-weight: normal;\r\n    white-space: nowrap;\r\n  }\r\n\r\n  ol.labels li.lastActive {\r\n    z-index: 5;\r\n  }\r\n  ol.labels li.active {\r\n    z-index: 10;\r\n    opacity: 1;\r\n  }\r\n\r\n  h2,\r\n  h3{\r\n    margin-top: 0; /* list and card margin/padding are sufficient, no additional space for first headline */\r\n  }\r\n\r\n  .copy {\r\n    margin-top: 1.4em; /* line-height, essentialy looks an empty line */\r\n  }\r\n\r\n  .slider-container {\r\n    --track-bg: var(--color-blue-light-3);\r\n    --progress-bg: var(--color-blue-dark);\r\n    --thumb-bg: var(--color-blue-light-2);\r\n    --thumb-fg: var(--color-blue-dark);\r\n\r\n    padding: 0.1px 3%; /* pad-x has to be non-zero or container will collapse to only slider-track height (withour thumb) */\r\n    margin: 1em 0 2em;\r\n  }\r\n\r\n  .slider-thumb.default {\r\n    display: block;\r\n    width: 1em;\r\n    height: 1em;\r\n    background-color: var(--thumb-fg);\r\n    border-radius: 50%;\r\n  }\r\n\r\n  .slider-thumb.custom {\r\n    font-size: 30px;\r\n  }</style>"
  ],
  "names": [],
  "mappings": "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"
}